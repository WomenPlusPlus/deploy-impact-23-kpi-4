# Generated by Django 4.2.5 on 2023-10-08 15:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Audit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(decimal_places=2, max_digits=16, null=True),
                ),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_timestamp", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Circle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Circle_KPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Period",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(default=2023)),
                ("month", models.IntegerField(null=True)),
                ("quarter", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Periodicity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Yearly", "Yearly"),
                            ("Quarterly", "Quarterly"),
                            ("Monthly", "Monthly"),
                        ]
                    ),
                ),
                ("description", models.CharField(max_length=150)),
            ],
            options={
                "verbose_name_plural": "Periodicities",
            },
        ),
        migrations.CreateModel(
            name="Range",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("min_value", models.DecimalField(decimal_places=2, max_digits=8)),
                ("max_value", models.DecimalField(decimal_places=2, max_digits=8)),
                ("display_value", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("gatekeeper", "Gatekeeper"),
                            ("economist", "Economist"),
                            ("member", "Member"),
                        ],
                        default="member",
                    ),
                ),
                ("description", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="User_Circle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "circle_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="kpi_app.circle"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="range",
            constraint=models.UniqueConstraint(
                fields=("min_value", "max_value", "display_value"),
                name="unique_range_definition",
            ),
        ),
        migrations.AddField(
            model_name="kpi",
            name="circles",
            field=models.ManyToManyField(
                through="kpi_app.Circle_KPI", to="kpi_app.circle"
            ),
        ),
        migrations.AddField(
            model_name="kpi",
            name="periodicity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="kpi_app.periodicity"
            ),
        ),
        migrations.AddField(
            model_name="kpi",
            name="range",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="kpi_app.range"
            ),
        ),
        migrations.AddField(
            model_name="circle_kpi",
            name="circles",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="kpi_app.circle"
            ),
        ),
        migrations.AddField(
            model_name="circle_kpi",
            name="kpi",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="kpi_app.kpi"
            ),
        ),
        migrations.AddField(
            model_name="audit",
            name="circle_kpi",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="kpi_app.circle_kpi"
            ),
        ),
        migrations.AddField(
            model_name="audit",
            name="period",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="kpi_app.period"
            ),
        ),
        migrations.AddField(
            model_name="audit",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="role_id",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="kpi_app.role",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
